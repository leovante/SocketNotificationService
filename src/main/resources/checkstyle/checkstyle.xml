<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
        "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
        "https://checkstyle.org/dtds/configuration_1_3.dtd">

<module name="Checker">
    <property name="charset" value="UTF-8"/>
    <property name="severity" value="error"/>
    <module name="SuppressionFilter">
        <property name="file" value="src/main/resources/checkstyle/suppressions.xml"/>
    </module>
    <module name="SuppressWarningsFilter"/>
    <module name="TreeWalker">
        <property name="tabWidth" value="4"/>
        <!-- 1.1 -->
        <module name="OuterTypeFilename"/>

        <!-- Checks for Annotations -->
        <!-- See https://checkstyle.sourceforge.io/config_annotation.html#Content -->
        <!-- 4.8.5 -->
        <module name="AnnotationLocation">
            <property name="id" value="AnnotationLocationMostCases"/>
            <property name="tokens"
                      value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF,
                          VARIABLE_DEF, RECORD_DEF, COMPACT_CTOR_DEF"/>
        </module>
        <module name="MissingDeprecated"/>
        <module name="MissingOverride"/>
        <module name="PackageAnnotation"/>
        <module name="SuppressWarningsHolder"/>

        <!-- Checks for Block -->
        <!-- See https://checkstyle.sourceforge.io/config_blocks.html#Content -->
        <!-- 4.1.1  -->
        <module name="NeedBraces">
            <property name="tokens"
                      value="LITERAL_DO, LITERAL_ELSE, LITERAL_FOR, LITERAL_IF, LITERAL_WHILE"/>
        </module>
<!--        <module name="NeedBraces">-->
<!--            <property name="tokens" value="LAMBDA"/>-->
<!--            <property name="allowSingleLineStatement" value="true"/>-->
<!--        </module>-->
        <!-- 4.1.2 -->
        <module name="LeftCurly">
            <property name="tokens"
                      value="ANNOTATION_DEF, CLASS_DEF, CTOR_DEF, ENUM_CONSTANT_DEF, ENUM_DEF,
                        INTERFACE_DEF, LAMBDA, LITERAL_CASE, LITERAL_CATCH, LITERAL_DEFAULT,
                        LITERAL_DO, LITERAL_ELSE, LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF,
                        LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, METHOD_DEF,
                        OBJBLOCK, STATIC_INIT, RECORD_DEF, COMPACT_CTOR_DEF"/>
        </module>
        <module name="RightCurly">
            <property name="id" value="RightCurlySame"/>
            <property name="tokens"
                      value="LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE,
                        LITERAL_DO"/>
        </module>
        <module name="RightCurly">
            <property name="id" value="RightCurlyAlone"/>
            <property name="option" value="alone"/>
            <property name="tokens"
                      value="CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, LITERAL_WHILE, STATIC_INIT,
                        INSTANCE_INIT, ANNOTATION_DEF, ENUM_DEF, INTERFACE_DEF, RECORD_DEF,
                        COMPACT_CTOR_DEF"/>
        </module>
        <!-- 4.1.3
             6.2 -->
        <module name="EmptyBlock">
            <property name="option" value="TEXT"/>
            <property name="tokens"
                      value="LITERAL_TRY, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_SWITCH"/>
        </module>
        <module name="EmptyCatchBlock">
            <property name="exceptionVariableName" value="expected"/>
        </module>
        <module name="SuppressionXpathSingleFilter">
            <!-- подавление для правила 4.1.3 - В пустых блоках открывающая скобка может идти сразу после закрывающей -->
            <property name="id" value="RightCurlyAlone"/>
            <property name="query" value="//RCURLY[parent::SLIST[count(./*)=1]
                                         or preceding-sibling::*[last()][self::LCURLY]]"/>
        </module>
        <module name="AvoidNestedBlocks"/>

        <!-- Checks for Class Design -->
        <!-- See https://checkstyle.sourceforge.io/config_design.html -->
        <module name="FinalClass"/>
        <module name="InterfaceIsType"/>
        <module name="MutableException"/>
        <module name="ThrowsCount">
            <property name="max" value="3"/>
        </module>
        <!-- 3.3.1 Внутренние классы объявляются в конце -->
        <module name="InnerTypeLast"/>
        <module name="OneTopLevelClass"/>

        <!-- Checks for Coding -->
        <!-- See https://checkstyle.sourceforge.io/config_coding.html -->
        <module name="CovariantEquals"/>
        <module name="EmptyStatement"/>
        <module name="EqualsAvoidNull"/>
        <module name="EqualsHashCode"/>
        <module name="HiddenField">
            <property name="ignoreSetter" value="true"/>
            <property name="ignoreConstructorParameter" value="true"/>
            <property name="setterCanReturnItsClass" value="true"/>
            <property name="tokens" value="VARIABLE_DEF, LAMBDA"/>
        </module>
        <module name="InnerAssignment"/>
        <module name="MagicNumber">
            <property name="ignoreNumbers"
                      value="-4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 24, 31, 32, 60, 64, 100, 128, 256, 512, 1000, 1024"/>
            <property name="ignoreHashCodeMethod" value="true"/>
            <property name="ignoreAnnotation" value="true"/>
        </module>
        <!-- 4.8.4.3 default: всегда присутствует -->
        <module name="MissingSwitchDefault"/>
        <module name="DefaultComesLast"/>
        <module name="ModifiedControlVariable"/>
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>
        <module name="StringLiteralEquality"/>
        <module name="NestedForDepth">
            <property name="max" value="3"/>
        </module>
        <module name="NestedIfDepth">
            <property name="max" value="3"/>
        </module>
        <module name="NestedTryDepth"/>
        <module name="IllegalThrows"/>
        <module name="PackageDeclaration"/>
        <!-- 3.3.1 -->
        <module name="DeclarationOrder"/>
        <module name="ExplicitInitialization"/>
        <!-- 4.8.2.1 -->
        <module name="MultipleVariableDeclarations"/>
        <!-- 4.8.2.2  -->
        <module name="VariableDeclarationUsageDistance"/>
        <module name="UnnecessaryParentheses"/>
        <!-- 4.3 -->
        <module name="OneStatementPerLine"/>
        <!-- 3.3.1.1  -->
        <module name="OverloadMethodsDeclarationOrder"/>
        <!-- 4.8.4.2  -->
        <module name="FallThrough">
            <property name="reliefPattern" value="// Проход"/>
        </module>

        <!-- Checks for Imports -->
        <!-- See https://checkstyle.sourceforge.io/config_imports.html#Content -->
        <!-- 3.2.1 -->
        <module name="AvoidStarImport"/>
        <module name="IllegalImport"/>
        <module name="RedundantImport"/>
        <module name="UnusedImports"/>
        <!-- 3.2.4 -->
<!--        <module name="ImportOrder">-->
<!--            <property name="option" value="top"/>-->
<!--            <property name="groups" value="javax,java,org.springframework,com.fasterxml,io.swagger,-->
<!--                                               lombok,org.junit,org.mockito,com.nlmk,NLMK,*"/>-->
<!--            <property name="ordered" value="true"/>-->
<!--            <property name="separated" value="true"/>-->
<!--        </module>-->
        <module name="CustomImportOrder">
            <property name="customImportOrderRules" value="STANDARD_JAVA_PACKAGE###THIRD_PARTY_PACKAGE###SPECIAL_IMPORTS"/>
            <property name="standardPackageRegExp" value="^(java|javax)\."/>
            <property name="specialImportsRegExp" value="^(com.nlmk|nlmk|NLMK)\."/>
            <property name="sortImportsInGroupAlphabetically" value="true"/>
            <property name="separateLineBetweenGroups" value="true"/>
        </module>

        <!-- 3.2.3  -->
        <module name="AvoidStaticImport"/>

        <!-- Checks for Javadoc -->
        <!-- https://checkstyle.sourceforge.io/config_javadoc.html -->
        <!-- 7.1.1 -->
        <module name="SingleLineJavadoc">
            <property name="ignoreInlineTags" value="false"/>
        </module>
        <module name="InvalidJavadocPosition"/>
        <!-- 7.1.2 -->
        <module name="JavadocParagraph"/>
        <module name="RequireEmptyLineBeforeBlockTagGroup"/>
        <!-- 7.1.3 -->
        <module name="AtclauseOrder">
            <property name="tagOrder" value="@param, @return, @throws, @deprecated"/>
            <property name="target"
                      value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF, VARIABLE_DEF"/>
        </module>
        <module name="JavadocTagContinuationIndentation">
            <property name="offset" value="8"/>
        </module>
        <module name="NonEmptyAtclauseDescription"/>
        <!-- 7.2 -->
        <module name="SummaryJavadoc">
            <property name="forbiddenSummaryFragments"
                      value="^@return the *|^Этот метод возвращает |^A [{]@code [a-zA-Z0-9]+[}]( is a )"/>
        </module>
        <module name="WriteTag">
            <property name="tag" value="@throw"/>
            <property name="tagFormat" value="\S"/>
            <property name="severity" value="ignore"/>
            <property name="tagSeverity" value="warning"/>
        </module>
        <!-- 7.3 -->
        <module name="MissingJavadocType">
            <property name="scope" value="protected"/>
            <property name="tokens"
                      value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF,
                                          ANNOTATION_DEF"/>
            <property name="excludeScope" value="nothing"/>
        </module>
        <module name="MissingJavadocMethod">
            <property name="id" value="MissingJavadocPublicMethod"/>
            <property name="scope" value="public"/>
            <property name="excludeScope" value="private"/>
            <property name="allowedAnnotations" value="Override, Test"/>
            <property name="tokens" value="METHOD_DEF, CTOR_DEF, ANNOTATION_FIELD_DEF"/>
        </module>
        <module name="MissingJavadocMethod">
            <property name="id" value="MissingJavadocProtectedMethod"/>
            <property name="scope" value="protected"/>
            <property name="excludeScope" value="private"/>
            <property name="allowedAnnotations" value="Override, Test"/>
            <property name="tokens" value="METHOD_DEF, CTOR_DEF, ANNOTATION_FIELD_DEF"/>
        </module>
        <module name="JavadocMethod">
            <property name="scope" value="public"/>
            <property name="allowMissingParamTags" value="true"/>
            <property name="allowMissingReturnTag" value="true"/>
            <property name="allowedAnnotations" value="Override, Test"/>
            <property name="tokens" value="METHOD_DEF, CTOR_DEF, ANNOTATION_FIELD_DEF"/>
        </module>
        <module name="InvalidJavadocPosition"/>

        <!-- Miscellaneous other checks -->
        <!-- 4.8.6 -->
        <module name="CommentsIndentation">
            <property name="tokens" value="SINGLE_LINE_COMMENT, BLOCK_COMMENT_BEGIN"/>
        </module>
        <!-- 4.8.6.3 -->
        <module name="TodoComment">
            <property name="format" value="(todo)"/>
        </module>
        <module name="TodoComment">
            <property name="id" value="commentStartWithSpace"/>
            <property name="format" value="^([^\s\/*])"/>
            <message key="todo.match" value="Comment text should start with space."/>
        </module>
        <module name="UncommentedMain">
            <property name="excludedClasses" value="Application"/>
        </module>
        <!-- 4.8.8 -->
        <module name="UpperEll"/>
        <!-- 4.8.3.1 -->
        <module name="ArrayTypeStyle"/>
        <!-- 4.2
             4.5.2
             4.8.3.2
             4.8.4.1 -->
        <module name="Indentation">
            <property name="basicOffset" value="4"/>
            <property name="braceAdjustment" value="4"/>
            <property name="caseIndent" value="4"/>
            <property name="throwsIndent" value="4"/>
            <property name="lineWrappingIndentation" value="8"/>
            <property name="arrayInitIndent" value="8"/>
        </module>

        <!-- Checks for Modifiers -->
        <!-- 4.8.7 -->
        <module name="ModifierOrder"/>
        <!-- See http://checkstyle.sourceforge.net/config_modifier.html#RedundantModifier -->
        <module name="RedundantModifier"/>

        <!-- Checks for Naming Conventions -->
        <!-- See http://checkstyle.sourceforge.net/config_naming.html#Modules -->
        <!-- 5.2.1 -->
        <module name="PackageName">
            <property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$"/>
            <message key="name.invalidPattern"
                     value="Package name ''{0}'' must written in all lowercase,
                        with consecutive words simply concatenated together (no underscores)."/>
        </module>
        <!-- 5.2.2 -->
        <module name="TypeName">
            <property name="id" value="ClassName"/>
            <property name="tokens" value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF,
                        ANNOTATION_DEF"/>
            <message key="name.invalidPattern"
                     value="Class (Interface) name ''{0}'' written in UpperCamelCase."/>
        </module>
        <!-- 5.2.3 -->
        <module name="MethodName">
            <property name="id" value="MethodNameRegular"/>
            <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$"/>
            <message key="name.invalidPattern"
                     value="Method names are written in lowerCamelCase."/>
        </module>
        <module name="MethodName">
            <property name="id" value="MethodNameTest"/>
            <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9_]*$"/>
            <message key="name.invalidPattern"
                     value="Method names are written in lowerCamelCase."/>
        </module>
        <!-- 5.2.4 -->
        <module name="ConstantName">
            <property name="format"
                      value="^log(ger)?$|^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$"/>
            <message key="name.invalidPattern"
                     value="Constant names are written in UPPER_SNAKE_CASE."/>
        </module>
        <!-- 5.2.5 -->
        <module name="MemberName">
            <property name="id" value="NonConstantFieldNames"/>
            <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$"/>
            <message key="name.invalidPattern"
                     value="Non-constant field names (static or otherwise) are written in lowerCamelCase."/>
        </module>
        <!-- 5.2.6 -->
        <module name="ParameterName">
            <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
            <message key="name.invalidPattern"
                     value="Parameter name ''{0}'' must are written in lowerCamelCase."/>
        </module>
        <module name="CatchParameterName">
            <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
            <message key="name.invalidPattern"
                     value="Catch parameter name ''{0}'' must are written in lowerCamelCase."/>
        </module>
        <module name="LambdaParameterName">
            <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
            <message key="name.invalidPattern"
                     value="Lambda parameter name ''{0}'' must are written in lowerCamelCase."/>
        </module>
        <!-- 5.2.7 -->
        <module name="LocalVariableName">
            <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
            <message key="name.invalidPattern"
                     value="Local variable name ''{0}'' must are written in lowerCamelCase."/>
        </module>
        <module name="LocalFinalVariableName">
            <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
            <message key="name.invalidPattern"
                     value="Local final variable name ''{0}'' must are written in lowerCamelCase."/>
        </module>
        <!-- 5.2.8 -->
        <module name="MethodTypeParameterName">
            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
            <message key="name.invalidPattern"
                     value="Method type name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module name="ClassTypeParameterName">
            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
            <message key="name.invalidPattern"
                     value="Class type name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module name="InterfaceTypeParameterName">
            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
            <message key="name.invalidPattern"
                     value="Interface type name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module name="StaticVariableName"/>
        <!-- 5.3 -->
        <module name="AbbreviationAsWordInName">
            <property name="ignoreFinal" value="false"/>
            <property name="allowedAbbreviationLength" value="2"/>
            <property name="allowedAbbreviations" value="QL,OI"/>
            <property name="tokens"
                      value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, ANNOTATION_DEF, ANNOTATION_FIELD_DEF,
                        PARAMETER_DEF, VARIABLE_DEF, METHOD_DEF"/>
        </module>

        <!-- Checks Size Violations -->
        <!-- See http://checkstyle.sourceforge.net/config_sizes.html -->
        <module name="ExecutableStatementCount">
            <property name="max" value="50"/>
        </module>
        <!-- 4.9 -->
        <module name="MethodLength">
            <property name="id" value="MethodLengthCheck"/>
            <property name="tokens" value="METHOD_DEF, CTOR_DEF"/>
            <property name="max" value="30"/>
            <property name="countEmpty" value="false"/>
        </module>
        <module name="AnonInnerLength"/>
        <module name="ParameterNumber">
            <property name="ignoreOverriddenMethods" value="true"/>
            <property name="tokens" value="METHOD_DEF"/>
        </module>
        <!-- 4.10.2 -->
        <module name="LambdaBodyLength">
            <property name="max" value="10"/>
        </module>
        <module name="OuterTypeNumber"/>

        <!-- Checks for Whitespaces -->
        <!-- 4.6.2 -->
        <module name="GenericWhitespace">
            <message key="ws.followed"
                     value="GenericWhitespace ''{0}'' is followed by whitespace."/>
            <message key="ws.preceded"
                     value="GenericWhitespace ''{0}'' is preceded with whitespace."/>
            <message key="ws.illegalFollow"
                     value="GenericWhitespace ''{0}'' should followed by whitespace."/>
            <message key="ws.notPreceded"
                     value="GenericWhitespace ''{0}'' is not preceded with whitespace."/>
        </module>
        <module name="EmptyForInitializerPad"/>
        <module name="EmptyForIteratorPad">
            <property name="option" value="space"/>
        </module>
        <!-- 3
             4.6.1 -->
        <module name="EmptyLineSeparator">
            <property name="tokens"
                      value="PACKAGE_DEF, IMPORT, STATIC_IMPORT, CLASS_DEF, INTERFACE_DEF, ENUM_DEF,
                        STATIC_INIT, INSTANCE_INIT, METHOD_DEF, CTOR_DEF, VARIABLE_DEF, RECORD_DEF,
                        COMPACT_CTOR_DEF"/>
            <property name="allowNoEmptyLineBetweenFields" value="true"/>
        </module>
        <module name="WhitespaceAfter">
            <property name="tokens"
                      value="COMMA, SEMI, TYPECAST, LITERAL_IF, LITERAL_ELSE,
                        LITERAL_WHILE, LITERAL_DO, LITERAL_FOR, DO_WHILE"/>
        </module>
        <!-- 4.6.2 -->
        <module name="NoWhitespaceAfter"/>
        <!-- 4.6.2 -->
        <module name="NoWhitespaceBefore">
            <property name="tokens"
                      value="COMMA, SEMI, POST_INC, POST_DEC, DOT, METHOD_REF"/>
            <property name="allowLineBreaks" value="true"/>
        </module>
        <!-- 4.5.1 -->
        <module name="OperatorWrap">
            <property name="option" value="NL"/>
            <property name="tokens"
                      value="BAND, BOR, BSR, BXOR, DIV, EQUAL, GE, GT, LAND, LE, LITERAL_INSTANCEOF, LOR,
                        LT, MINUS, MOD, NOT_EQUAL, PLUS, QUESTION, SL, SR, STAR, METHOD_REF "/>
        </module>
        <module name="SeparatorWrap">
            <property name="id" value="SeparatorWrapDot"/>
            <property name="tokens" value="DOT"/>
            <property name="option" value="nl"/>
        </module>
        <module name="SeparatorWrap">
            <property name="id" value="SeparatorWrapComma"/>
            <property name="tokens" value="COMMA"/>
            <property name="option" value="EOL"/>
        </module>
        <module name="SeparatorWrap">
            <property name="id" value="SeparatorWrapEllipsis"/>
            <property name="tokens" value="ELLIPSIS"/>
            <property name="option" value="EOL"/>
        </module>
        <module name="SeparatorWrap">
            <property name="id" value="SeparatorWrapArrayDeclarator"/>
            <property name="tokens" value="ARRAY_DECLARATOR"/>
            <property name="option" value="EOL"/>
        </module>
        <module name="SeparatorWrap">
            <property name="id" value="SeparatorWrapMethodRef"/>
            <property name="tokens" value="METHOD_REF"/>
            <property name="option" value="nl"/>
        </module>
        <!-- 4.6.2 -->
        <module name="MethodParamPad">
            <property name="tokens"
                      value="CTOR_DEF, LITERAL_NEW, METHOD_CALL, METHOD_DEF,
                        SUPER_CTOR_CALL, ENUM_CONSTANT_DEF, RECORD_DEF"/>
        </module>
        <!-- 4.6.2 -->
        <module name="ParenPad">
            <property name="tokens"
                      value="ANNOTATION, ANNOTATION_FIELD_DEF, CTOR_CALL, CTOR_DEF, DOT, ENUM_CONSTANT_DEF,
                        EXPR, LITERAL_CATCH, LITERAL_DO, LITERAL_FOR, LITERAL_IF, LITERAL_NEW,
                        LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_WHILE, METHOD_CALL,
                        METHOD_DEF, QUESTION, RESOURCE_SPECIFICATION, SUPER_CTOR_CALL, LAMBDA"/>
        </module>
        <!-- 4.6.2 -->
        <module name="WhitespaceAfter">
            <property name="tokens"
                      value="COMMA, SEMI, TYPECAST, LITERAL_IF, LITERAL_ELSE,
                        LITERAL_WHILE, LITERAL_DO, LITERAL_FOR, DO_WHILE"/>
        </module>
        <!-- 4.6.2 -->
        <module name="WhitespaceAround">
            <property name="allowEmptyConstructors" value="true"/>
            <property name="allowEmptyLambdas" value="true"/>
            <property name="allowEmptyMethods" value="true"/>
            <property name="allowEmptyTypes" value="true"/>
            <property name="allowEmptyLoops" value="true"/>
            <property name="ignoreEnhancedForColon" value="false"/>
            <property name="tokens"
                      value="ASSIGN, BAND, BAND_ASSIGN, BOR, BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR,
                        BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN, DO_WHILE, EQUAL, GE, GT, LAMBDA, LAND,
                        LCURLY, LE, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE, LITERAL_FINALLY,
                        LITERAL_FOR, LITERAL_IF, LITERAL_RETURN, LITERAL_SWITCH, LITERAL_SYNCHRONIZED,
                        LITERAL_TRY, LITERAL_WHILE, LOR, LT, MINUS, MINUS_ASSIGN, MOD, MOD_ASSIGN,
                        NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION, RCURLY, SL, SLIST, SL_ASSIGN, SR,
                        SR_ASSIGN, STAR, STAR_ASSIGN, LITERAL_ASSERT, TYPE_EXTENSION_AND"/>
            <message key="ws.notFollowed"
                     value="WhitespaceAround: ''{0}'' is not followed by whitespace. Empty blocks may only be represented as '{}' when not part of a multi-block statement (4.1.3)"/>
            <message key="ws.notPreceded"
                     value="WhitespaceAround: ''{0}'' is not preceded with whitespace."/>
        </module>
        <module name="TypecastParenPad"/>
        <!-- 3.2.2 Объявление пакетов, импортов в одну строку -->
        <module name="NoLineWrap">
            <property name="tokens" value="PACKAGE_DEF, IMPORT"/>
        </module>
    </module>

    <!-- 3.1 Package и import игнорируются.
         4.4 Размер строки. -->
    <module name="LineLength">
        <property name="id" value="LineLengthCheck"/>
        <property name="max" value="120"/>
        <property name="fileExtensions" value="java"/>
        <property name="ignorePattern" value="^package.*|^import.*|a href|href|http://|https://|ftp://"/>
    </module>

    <!-- 2.3.1 -->
    <module name="FileTabCharacter">
        <property name="eachLine" value="true"/>
    </module>

    <!-- 2.4 Проверка на присутствие package-info.java -->
    <module name="JavadocPackage">
        <property name="id" value="MissingPackageInfo"/>
    </module>

    <!-- Regexp checks -->
    <!-- See http://checkstyle.sourceforge.net/config_regexp.html -->
    <module name="RegexpMultiline">
        <property name="format" value="\r?\n[ \t\x0B\f]*\r?\n[ \t\x0B\f]*\r?\n"/>
        <property name="fileExtensions" value="java"/>
        <property name="message" value="Two consecutive empty lines"/>
    </module>
    <!-- 4.6.1 -->
    <module name="RegexpMultiline">
        <property name="id" value="MultilineEmptyRowAfterClassDef"/>
        <property name="format" value="^([^\r\n ]+ )*(class|interface|@interface|enum) [^{]*\{[\r]?\n[^\r\n}]"/>
        <property name="message" value="Leave empty row after class/interface/@interface/enum definition"/>
        <property name="severity" value="error"/>
        <property name="fileExtensions" value="java"/>
    </module>
    <module name="RegexpMultiline">
        <property name="id" value="MultilineEmptyRowBeforeClassEnd"/>
        <property name="format" value="[^\r\n{][\r]?\n\}[\r]?\n"/>
        <property name="message" value="Leave empty row before end of class/interface/@interface/enum"/>
        <property name="severity" value="error"/>
        <property name="fileExtensions" value="java"/>
    </module>
    <!-- 7.1.4 -->
    <module name="RegexpSingleline">
        <property name="format" value="^\s*\*\s*@author"/>
        <property name="minimum" value="0"/>
        <property name="maximum" value="0"/>
        <property name="message" value="Javadoc has illegal ''author'' tag."/>
    </module>
</module>