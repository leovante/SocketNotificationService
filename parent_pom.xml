<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.1.6</version>
        <relativePath/>
    </parent>

    <groupId>com.nlmk</groupId>
    <artifactId>spring-boot-starter-adp</artifactId>
    <version>1.0.0-beta-notgraphql</version>
    <packaging>pom</packaging>

    <name>spring-boot-starter-adp</name>
    <description>Application layer starter for mes adp project</description>

    <distributionManagement>
        <repository>
            <id>mes-adp-central</id>
            <name>Хранилище mes adp releases артефактов</name>
            <url>https://repos.dp.nlmk.com/artifactory/mes-adp-maven</url>
        </repository>
        <snapshotRepository>
            <id>mes-adp-snapshots</id>
            <name>Хранилище mes adp snapshots артефактов</name>
            <url>https://repos.dp.nlmk.com/artifactory/mes-adp-maven</url>
        </snapshotRepository>
    </distributionManagement>

    <scm>
        <url>https://git.nlmk.com/mes-adp/spring-boot-starter-adp</url>
        <connection>scm:git:git@git.nlmk.com:mes-adp/spring-boot-starter-adp.git</connection>
        <tag>0.9.6</tag>
    </scm>

    <properties>
        <java.version>17</java.version>
        <nlmk-mes-checkstyle.version>1.0.0-SNAPSHOT</nlmk-mes-checkstyle.version>
        <!-- Plugins versions -->
        <jacoco.version>0.8.6</jacoco.version>
        <!-- Dependencies versions -->
        <avro.version>1.11.0</avro.version>
        <kafka.confluent.version>7.4.0</kafka.confluent.version>
        <lombok.version>1.18.30</lombok.version>
        <logback-ecs-encoder.version>1.5.0</logback-ecs-encoder.version>
        <mapstruct.version>1.5.5.Final</mapstruct.version>
        <graphql.spring-boot-starter.version>5.0.2</graphql.spring-boot-starter.version>
        <graphql.tools.version>5.2.4</graphql.tools.version>
        <!--Sonar properties-->
        <sonar.jacoco.reportPath>${project.basedir}/../target/jacoco.exec</sonar.jacoco.reportPath>
        <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
        <spring-boot.version>3.1.6</spring-boot.version>
        <openapi.version>2.2.0</openapi.version>
        <spring-cloud.version>2022.0.4</spring-cloud.version>
        <sentry.version>3.1.0</sentry.version>
        <opentracing.jaeger.version>3.3.1</opentracing.jaeger.version>
        <opentracing.jaeger.feign.version>0.4.1</opentracing.jaeger.feign.version>
        <maven-checkstyle-plugin.version>3.2.2</maven-checkstyle-plugin.version>
        <checkstyle.version>8.39</checkstyle.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>${openapi.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-openfeign</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${mapstruct.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct-processor</artifactId>
            <version>${mapstruct.version}</version>
            <scope>provided</scope>
        </dependency>

        <!--LOGGING-->
        <dependency>
            <groupId>co.elastic.logging</groupId>
            <artifactId>logback-ecs-encoder</artifactId>
            <version>${logback-ecs-encoder.version}</version>
        </dependency>

        <!--METRICS-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
        </dependency>

        <!--VALIDATION-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>

        <!--TRACING-->
        <!--        <dependency>-->
        <!--            <groupId>org.springframework.cloud</groupId>-->
        <!--            <artifactId>spring-cloud-starter-sleuth</artifactId>-->
        <!--        </dependency>-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-zipkin</artifactId>
            <version>2.2.8.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>io.opentracing.contrib</groupId>
            <artifactId>opentracing-spring-jaeger-web-starter</artifactId>
            <version>${opentracing.jaeger.version}</version>
        </dependency>
        <dependency>
            <groupId>io.github.openfeign.opentracing</groupId>
            <artifactId>feign-opentracing</artifactId>
            <version>${opentracing.jaeger.feign.version}</version>
        </dependency>

        <!--         Kafka dependencies -->
        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka</artifactId>
        </dependency>
        <dependency>
            <groupId>io.confluent</groupId>
            <artifactId>kafka-schema-registry-client</artifactId>
            <version>${kafka.confluent.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.avro</groupId>
            <artifactId>avro</artifactId>
            <version>${avro.version}</version>
        </dependency>
        <dependency>
            <groupId>io.confluent</groupId>
            <artifactId>kafka-avro-serializer</artifactId>
            <version>${kafka.confluent.version}</version>
        </dependency>

        <!--DATABASE-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.liquibase</groupId>
            <artifactId>liquibase-core</artifactId>
        </dependency>

        <!-- Sentry -->
        <dependency>
            <groupId>io.sentry</groupId>
            <artifactId>sentry-logback</artifactId>
            <version>${sentry.version}</version>
        </dependency>
        <dependency>
            <groupId>io.sentry</groupId>
            <artifactId>sentry-spring-boot-starter</artifactId>
            <version>${sentry.version}</version>
        </dependency>

        <!--TEST-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <build>
        <finalName>app</finalName>
        <plugins>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <compilerArgs>
                        <arg>
                            -Amapstruct.defaultComponentModel=spring
                        </arg>
                    </compilerArgs>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <executions>
                    <execution>
                        <id>default-prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-report</id>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <configuration>
                    <tagNameFormat>@{project.version}</tagNameFormat>
                    <generateReleasePoms>false</generateReleasePoms>
                    <scmCommentPrefix>[release]:</scmCommentPrefix>
                    <arguments>-Dmaven.javadoc.skip=true -Dmaven.test.skip=true</arguments>
                    <goals>validate</goals>
                    <preparationGoals>validate</preparationGoals>
                </configuration>
            </plugin>

        </plugins>
    </build>
</project>
